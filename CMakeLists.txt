PROJECT(libSDL2pp)

# meta
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)

# depends
FIND_PACKAGE(SDL2 REQUIRED)

# compiler flags & definitions
IF(MSVC)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W3")
	SET(WERROR_FLAG "/WX")
	ADD_DEFINITIONS(-DNOEXCEPT=)
ELSE(MSVC)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -Wextra -pedantic")
	SET(WERROR_FLAG "-Werror")
	ADD_DEFINITIONS(-DNOEXCEPT=noexcept)
ENDIF(MSVC)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${SDL2_INCLUDE_DIR})

# sources
SET(LIBRARY_SOURCES
	SDL2pp/Exception.cc
	SDL2pp/Point.cc
	SDL2pp/Rect.cc
	SDL2pp/Renderer.cc
	SDL2pp/SDL.cc
	SDL2pp/Texture.cc
	SDL2pp/Window.cc
)

SET(LIBRARY_HEADERS
	SDL2pp/Exception.hh
	SDL2pp/Point.hh
	SDL2pp/Rect.hh
	SDL2pp/Renderer.hh
	SDL2pp/SDL.hh
	SDL2pp/SDL2pp.hh
	SDL2pp/Texture.hh
	SDL2pp/Window.hh
)

IF(CMAKE_SOURCE_DIR STREQUAL PROJECT_SOURCE_DIR)
	MESSAGE(STATUS "libSDL2pp standalone build")

	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${WERROR_FLAG}")

	# library
	ADD_LIBRARY(SDL2pp SHARED ${LIBRARY_SOURCES} ${LIBRARY_HEADERS})
	TARGET_LINK_LIBRARIES(SDL2pp ${SDL2_LIBRARY})

	# demos and tests
	OPTION(RUN_GUI_TESTS "Run GUI tests (requires X11 display)" ON)
	ENABLE_TESTING()

	ADD_SUBDIRECTORY(demos)
	ADD_SUBDIRECTORY(tests)
ELSE(CMAKE_SOURCE_DIR STREQUAL PROJECT_SOURCE_DIR)
	MESSAGE(STATUS "libSDL2pp bundled build")

	# library
	ADD_LIBRARY(SDL2pp STATIC ${LIBRARY_SOURCES} ${LIBRARY_HEADERS})

	# provide variables to parent
	SET(SDL2PP_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR} ${SDL2_INCLUDE_DIR} PARENT_SCOPE)
	SET(SDL2PP_LIBRARIES SDL2pp ${SDL2_LIBRARY} PARENT_SCOPE)
ENDIF(CMAKE_SOURCE_DIR STREQUAL PROJECT_SOURCE_DIR)

